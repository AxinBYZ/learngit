	$git config --global user.name "yourname"
	$git config --global user.email "youremail"
1.$git init 仓库初始化  
2.$pwd 查看当前目录
3.$git add test.txt 把文件添加到暂存区
4.$git commit -m "this is a new file"  把暂存区得文件提交到仓库
	$ git add file1.txt
	$ git add file2.txt file3.txt
	$ git commit -m "add 3 files."
	可以一添加多个 一下提交
5.$git status 时刻掌握仓库当前的状态
6.$git diff test.txt 查看上次修改得内容
7.$git log 查看修改版本的历史记录
	如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数：
	$git log --pretty=oneline
8.$git reset --hard HEAD^   回退到上一个版本  两个^^回退两个版本  HEAD~100回退100个版本
9.$git reset --hard 3628164   根据版本ID号找到对应的版本
10.$git reflog    记录每次的命令
11.cat test.txt  查看文件内容
12.$git diff HEAD -- readme.txt   可以查看工作区和版本库里面最新版本的区别
13.$ git checkout -- readme.txt   git checkout -- file可以丢弃工作区的修改
14.$ git reset HEAD readme.txt    git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区
15.$rm test.txt    在文件管理器中删除,仓库中的还没有删除
	1>$git rm test.txt       在仓库中删除
	    $git commit -m "remove test.txt"      提交
	2>$git checkout -- test.txt
16.远程仓库
	第一步：创建SSH Key在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
		$ ssh-keygen -t rsa -C "youremail@example.com"
	如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
	第2步：登陆GitHub，打开“settings”，“SSH Keys”页面,然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容
	$ git remote add origin git@github.com:AxinBYZ/learngit.git    关联本地和远程仓库
	下一步：推送至远程仓库
		$git push -u origin master
17.$git clone git@github.com:AxinBYZ/test.git  克隆仓库到本地
18.$git checkout -b dev     git checkout命令加上-b参数表示创建并切换，相当于以下两条命令
	$git branch dev
	$git checkout dev
19.分支：
	Git鼓励大量使用分支：
	查看分支：git branch
	创建分支：git branch <name>
	切换分支：git checkout <name>
	创建+切换分支：git checkout -b <name>
	合并某分支到当前分支：git merge <name>
	删除分支：git branch -d <name>
20.分支提交冲突必须手动解决冲突后再提交
21.--no-ff方式的git merge:
22.$git stash 储存工作场景
	$git stash list  查看储存得工作场景
	$git stash apply  恢复场景
		$git stash drop 删除场景
	$git stash pop  恢复的同时把场景删掉
	你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：
		$ git stash apply stash@{0}
23.开发一个新feature，最好新建一个分支；如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。
24.$git remote 查看远程仓库的信息
	$ git remote -v   显示更加详细的信息
25.推送分支
	推送分支，就是把该分支上的所有本地提交推送到远程库。推送时，要指定本地分支，这样，Git就会把该分支推送到远程库对应的远程分支上：
		$ git push origin master
	如果要推送其他分支，比如dev，就改成
		$ git push origin dev